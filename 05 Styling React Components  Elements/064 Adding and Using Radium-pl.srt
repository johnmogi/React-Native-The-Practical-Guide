1
00:00:02,200 --> 00:00:07,840
Teraz, gdy nauczyłeś się dynamicznie ustawiać style i klasy, powróćmy

2
00:00:07,900 --> 00:00:11,790
do ograniczeń stylów wbudowanych. Najważniejsze dla nas w

3
00:00:11,890 --> 00:00:20,500
tej chwili, że nie możemy przypisać stylu dla naszego przycisku. Hover, który w css można po prostu utworzyć za

4
00:00:20,860 --> 00:00:27,340
pomocą: hover jest pseudo-selektorem, co oznacza, że ​​jest selektorem opartym na innym selektorze

5
00:00:27,370 --> 00:00:29,680
wskazanym przez ten dwukropek.

6
00:00:29,780 --> 00:00:37,720
Teraz nie możemy tego przypisać w naszej obecnej aplikacji, tam mamy nasz obiekt javascript stylu, w którym przypisujemy lub

7
00:00:37,720 --> 00:00:41,860
tworzymy style dla przycisku, ale hover, tak, jak byśmy go

8
00:00:41,940 --> 00:00:43,510
ustawili tutaj, prawda?

9
00:00:43,510 --> 00:00:45,680
Hover nie jest właściwością css.

10
00:00:46,120 --> 00:00:52,670
Moglibyśmy to naprawić oczywiście poprzez stylizację przycisku w pliku css, ale już wspomniałem, że ten

11
00:00:52,690 --> 00:00:58,390
styl nie byłby wówczas ograniczony do tego komponentu i wszystkie przyciski w naszej

12
00:00:58,390 --> 00:00:59,440
aplikacji miałyby stylizację.

13
00:00:59,440 --> 00:01:07,600
Tak, moglibyśmy obejść to z pewnymi niepowtarzalnymi identyfikatorami css lub klasami, ale możliwość korzystania z tych

14
00:01:07,600 --> 00:01:14,830
wbudowanych stylów tutaj również może być całkiem fajna, ponieważ jak już to robimy, możesz

15
00:01:14,830 --> 00:01:22,600
edytować je w kodzie, ponieważ wszystko jest javascript. Byłoby miło, gdybyśmy mogli używać pseudo selektorów i zapytań

16
00:01:22,780 --> 00:01:23,680
o media

17
00:01:23,720 --> 00:01:28,610
w naszych normalnych liniach inline w języku JavaScript, a domyślnie to

18
00:01:28,720 --> 00:01:35,620
oczywiście nie jest możliwe, ale możemy dodać pakiet trzeciej strony, który jest dość popularny, aby

19
00:01:35,830 --> 00:01:38,800
dodać tę funkcjonalność do naszej aplikacji ,

20
00:01:38,920 --> 00:01:40,610
więc zróbmy to.

21
00:01:40,660 --> 00:01:43,500
W tym celu musimy zainstalować nowy

22
00:01:43,540 --> 00:01:49,740
pakiet i tutaj otworzę swój normalny terminal na moim Macu lub w Windowsie,

23
00:01:49,840 --> 00:01:53,970
to będzie wiersz polecenia, to tylko terminal zintegrowany z

24
00:01:54,010 --> 00:01:59,200
kodem Visual Studio Microsoftu, możesz także otworzyć opcje poprzez zintegrowane terminal.

25
00:01:59,200 --> 00:02:02,590
Teraz jest to ten sam terminal, który masz na

26
00:02:02,590 --> 00:02:08,590
swoim komputerze, jeśli masz do niego normalny dostęp, ale automatycznie poruszasz się po folderze projektu,

27
00:02:08,590 --> 00:02:11,320
a teraz zainstaluję pakiet z instalacją npm.

28
00:02:11,350 --> 00:02:19,030
Dodam - zapiszę również, aby zapisać pozycję w paczce. json, aby naprawić numer wersji i łatwo

29
00:02:19,030 --> 00:02:21,310
udostępnić nasz projekt, a

30
00:02:21,610 --> 00:02:23,950
następnie pakiet nazywa się radem.

31
00:02:23,950 --> 00:02:30,070
Po prostu naciśnij Enter teraz, aby pobrać i dodać ten pakiet do projektu, abyśmy mogli

32
00:02:30,100 --> 00:02:31,300
zacząć go używać.

33
00:02:31,300 --> 00:02:39,730
Radium jest popularnym pakietem do reagowania, który pozwala nam używać wbudowanych stylów z pseudo-selektorami i zapytaniami

34
00:02:39,730 --> 00:02:40,770
o media,

35
00:02:40,780 --> 00:02:42,820
a więc całkiem nieźle.

36
00:02:42,820 --> 00:02:49,180
Po zainstalowaniu możemy zamknąć terminal ponownie i możemy zacząć go używać. Teraz, aby zacząć go używać, musimy najpierw zaimportować go do

37
00:02:49,180 --> 00:02:49,700
pliku, z

38
00:02:49,700 --> 00:02:53,530
którego chcemy go użyć, a może to być dowolny z plików, może

39
00:02:53,530 --> 00:02:56,430
to być aplikacja. plik js może

40
00:02:56,470 --> 00:02:59,420
być również plikiem osoby oczywiście.

41
00:02:59,620 --> 00:03:06,730
Pracujmy w aplikacji. plik js, ponieważ istnieje przycisk, w którym chcę dodać stan najechania. Aby móc to

42
00:03:06,730 --> 00:03:08,230
zrobić, muszę

43
00:03:08,270 --> 00:03:11,220
przede wszystkim zaimportować rad.

44
00:03:11,290 --> 00:03:16,070
Dodaj tutaj instrukcję importu, pozycja nie ma znaczenia, ale powinna znajdować się

45
00:03:16,230 --> 00:03:19,690
na górze pliku, będę importować rad z radu, to

46
00:03:19,690 --> 00:03:21,520
jest składnia, której możesz użyć.

47
00:03:21,640 --> 00:03:28,520
Teraz zaimportowane, możesz przewinąć do samego dołu, gdzie eksportujesz swoją aplikację, i tam możesz

48
00:03:28,520 --> 00:03:33,090
wywołać funkcję radu jako funkcję i owinąć ją swoją aplikacją.

49
00:03:33,110 --> 00:03:35,940
Teraz nazywa się to komponentem wyższego rzędu,

50
00:03:35,990 --> 00:03:39,230
coś, co utworzymy później w naszym projekcie kursu.

51
00:03:39,440 --> 00:03:45,860
Może to wyglądać niesamowicie, ale w końcu to tylko komponent owijający twój komponent, dodający rodzaj

52
00:03:45,860 --> 00:03:48,580
wstrzykiwania dodatkowej funkcjonalności, w tym przypadku

53
00:03:48,650 --> 00:03:54,260
dodatkowa składnia, która będzie analizować twoje style i rozumieć kilka dodatkowych funkcji, które

54
00:03:54,260 --> 00:03:55,910
możesz teraz zacząć używać.

55
00:03:56,000 --> 00:04:04,160
Możesz użyć tego na obu komponentach utworzonych z klasą i rozszerza komponent, jak również

56
00:04:04,250 --> 00:04:13,680
elementy funkcjonalne, więc jeśli dodamy rad przez import radu z radu, możemy również wyeksportować osobę radu

57
00:04:13,750 --> 00:04:15,700
tutaj, obie prace.

58
00:04:15,940 --> 00:04:22,930
Teraz z dodanym, możemy zacząć dodawać lub używać nowych funkcji i oczywiście robimy to w naszym

59
00:04:23,110 --> 00:04:25,560
stylu, ponieważ rad jest o stylach.

60
00:04:25,570 --> 00:04:29,590
Oto styl, który zostanie przypisany do przycisku na końcu.

61
00:04:29,950 --> 00:04:37,780
Chcę dodać styl zawisu, a dodając i zawijając rad do eksportu, możesz po

62
00:04:37,780 --> 00:04:44,210
prostu dodać nową właściwość ": hover" lub dowolny inny pseudo-selektor.

63
00:04:44,260 --> 00:04:46,720
Obsługiwane są wszystkie pseudo selektory, ale

64
00:04:46,780 --> 00:04:52,000
należy je zawijać w cudzysłowy, ale ponieważ zaczynają się od dwukropka, nie są poprawnymi

65
00:04:52,000 --> 00:04:58,840
nazwami właściwości javascript, ale są ciągami takimi, jakimi są. Jak wiesz, możesz tworzyć właściwości javascript jako

66
00:04:58,840 --> 00:05:03,160
łańcuchy lub jeśli nie masz w nich nieprawidłowego znaku,

67
00:05:03,250 --> 00:05:06,890
tak jak przedtem, tak jak wszystkie inne właściwości.

68
00:05:07,420 --> 00:05:13,020
Teraz wartość jest po prostu zestawem stylów dla

69
00:05:13,120 --> 00:05:22,180
stanu "najechania", więc inny obiekt javascript, w którym teraz ustawię kolor tła

70
00:05:22,810 --> 00:05:25,590
na jasnozielony dla zielonego

71
00:05:25,590 --> 00:05:36,100
przycisku i kolor tekstu na czarny może. I oczywiście nadpisam wskaźnik tam, gdzie nadpisuję kolor tła, tam po

72
00:05:36,190 --> 00:05:41,650
prostu ustawię styl, a teraz nie zawijam kropki, ponieważ jest to

73
00:05:41,650 --> 00:05:44,320
ciąg znaków, musimy użyć nawiasów kwadratowych.

74
00:05:44,420 --> 00:05:53,000
Przypisujemy tutaj nową wartość, nowy obiekt javascript, w którym używamy jasnoczerwonego i

75
00:05:53,000 --> 00:05:54,620
czarnego tekstu.

76
00:05:54,620 --> 00:06:02,600
Dzięki temu używamy funkcji radu. Możliwość przypisania właściwości, która jest poprawnym pseudo

77
00:06:02,600 --> 00:06:03,640
selektorem css

78
00:06:03,890 --> 00:06:07,760
i korzystanie z radu, nadal działa.

79
00:06:07,850 --> 00:06:13,220
Teraz, jeśli zapiszesz to i wszystkie pozostałe pliki, a ponownie załadujesz aplikację,

80
00:06:13,220 --> 00:06:22,320
po najechaniu na przycisk zobaczysz zmianę stylu, także dla czerwonego przycisku, ale nie zastąpi on go na jasno czerwony, więc

81
00:06:22,350 --> 00:06:24,090
spróbujmy inny kolor.

82
00:06:26,570 --> 00:06:27,760
Łosoś działa, więc

83
00:06:27,790 --> 00:06:32,740
jasnoczerwona nie istnieje, ale jeśli zmienię teraz na łososia, to też działa.

84
00:06:33,220 --> 00:06:36,570
Jest to całkiem fajne, ponieważ teraz masz najlepsze z obu

85
00:06:36,670 --> 00:06:41,620
światów, masz normalne pseudo selektory css, które możesz dodać i wciąż masz style z

86
00:06:41,620 --> 00:06:45,980
zakresu, które możesz łatwo edytować z poziomu kodu javascript, jak możesz zobaczyć tutaj.

87
00:06:46,060 --> 00:06:50,750
Teraz rad nie ogranicza cię do używania pseudo selektorów, tak jak my,

88
00:06:51,010 --> 00:06:53,120
możesz również dodawać zapytania o media.

89
00:06:53,260 --> 00:06:58,470
Może zrobimy to w komponencie osoby i zróbmy to w następnym wykładzie.
