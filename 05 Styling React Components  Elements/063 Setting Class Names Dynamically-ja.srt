1
00:00:02,140 --> 00:00:08,560
最後の講義では、Stoutを動的に設定する方法を学び、次にjavascriptを使ってそのスタイルプロパティに目を向けるようなことを操作する方法を学びます。

2
00:00:08,560 --> 00:00:13,080
&nbsp;

3
00:00:13,450 --> 00:00:19,230
クラス名はここでもDNAのように動的に設定できます。

4
00:00:19,480 --> 00:00:25,720
しかし、新しいクラスを導入して遊ぶことができます。たとえば、ここではコード内の何かを変更したいと言うことができます。

5
00:00:25,870 --> 00:00:28,800
&nbsp;

6
00:00:28,930 --> 00:00:39,640
このパラグラフは、人のリストに最初から最後にあるような自由な要素があるかどうかによって、実際に機能しているとしましょう。

7
00:00:39,640 --> 00:00:43,740
&nbsp;

8
00:00:43,810 --> 00:00:46,290
だから多分私たちはテキストを赤色にしたいと思うかもしれません。

9
00:00:46,330 --> 00:00:53,440
&nbsp;

10
00:00:53,440 --> 00:01:00,730
&nbsp;

11
00:01:00,730 --> 00:01:02,010
だから私は新しいクラスを追加して、赤色の普通のSクラスのレースに色を赤色にします。これはもちろんテキストの色にも影響します。そして、それを大胆にして、名前やクラスを作成したり、

12
00:01:02,010 --> 00:01:07,870
1つの要素が大胆に残っているなら、あなた次第です。

13
00:01:07,990 --> 00:01:09,920
私は私たちをクラスとして見なければなりません。

14
00:01:09,940 --> 00:01:11,850
これらはClovellyから入手できます。

15
00:01:11,950 --> 00:01:13,990
しかし今は、私は何も使っていません。

16
00:01:14,260 --> 00:01:21,430
&nbsp;

17
00:01:21,760 --> 00:01:32,170
私はここで、この段落のクラス名を、人の配列内の要素の長さに応じて、ここでは2または2以下に設定したいと思います。赤1で、最後は赤と太字です。

18
00:01:32,170 --> 00:01:33,020
&nbsp;

19
00:01:33,400 --> 00:01:44,140
もちろん、この段落に動的に設定したクラスやクラス名を調整する必要もあります。

20
00:01:44,230 --> 00:01:50,950
だから、私がやることはすべてここにすべての名前のクラスと名前が完全にあなたのものである新しい変数を作成することです。

21
00:01:50,950 --> 00:01:51,800
&nbsp;

22
00:01:52,030 --> 00:01:55,850
私は結局、一連の文字列を作成します。

23
00:01:55,870 --> 00:01:58,990
これはここでそれを行う一つの方法です。

24
00:01:59,020 --> 00:02:05,340
私は赤と太字を追加し、これらは私がここで見つけるだろうクラス名です。

25
00:02:05,340 --> 00:02:07,660
赤と太字のドットなし。

26
00:02:07,810 --> 00:02:09,170
ちょうど姓を選んでください。

27
00:02:09,280 --> 00:02:15,820
私はここに見せて、空きスペースでそれらを見せてくれるでしょう。

28
00:02:15,820 --> 00:02:22,790
これは、この文字列を1つの文字列に変換します。この文字列は最後に太字で表示されます。

29
00:02:22,810 --> 00:02:25,050
これが最終的に得られるものです。

30
00:02:25,050 --> 00:02:30,200
これは2つのクラス名を割り当てることができるクラスリストとして有効なCです。

31
00:02:30,340 --> 00:02:35,530
もちろん、これを手動で作成することもできますが、私はすぐに動的にdicereを追加します。これは汎用ソリューションを必要としている理由です。

32
00:02:35,530 --> 00:02:37,670
&nbsp;

33
00:02:37,930 --> 00:02:41,210
今度はこの段落に行き、クラス名を追加することができます。

34
00:02:41,380 --> 00:02:45,340
もちろん私はここでこれを文字列に束縛する必要はありません。

35
00:02:45,370 --> 00:02:51,640
私はこれを空のスペースと結合した単なる文字列であることに留意しているクラス変数に、単一のコール中かっこで動的にバインドすることもできます。

36
00:02:51,640 --> 00:02:56,400
&nbsp;

37
00:02:56,470 --> 00:03:01,620
これを保存して、deepsea SSファイルも保存していることを確認してください。

38
00:03:01,630 --> 00:03:05,100
さて、アプリケーションに戻ってみましょう。赤と太字です。

39
00:03:05,230 --> 00:03:08,670
どんな人にも触れることなく、当初から。

40
00:03:08,740 --> 00:03:10,800
それは少し奇妙に聞こえるが、あなたは私が何を意味するか知っている。

41
00:03:10,810 --> 00:03:15,280
だから、いつもこれらのクラスを割り当てたので、最初から読んでいます。

42
00:03:15,310 --> 00:03:19,290
これで動的な性質を追加することができます。

43
00:03:19,330 --> 00:03:24,450
それ以外の人が読まれるべきでなければ、私たちはそれをしたいだけです。

44
00:03:24,460 --> 00:03:30,730
それが2以下以下で、実際に等しい場合、3人全員がいる場合は、これらのクラス以外の者を添付する必要があります。

45
00:03:30,850 --> 00:03:32,440
&nbsp;

46
00:03:32,440 --> 00:03:37,600
だから私は実際に何か他のことをするか、ここでchoice文を削除して空の配列に従属させます。

47
00:03:37,600 --> 00:03:38,200
&nbsp;

48
00:03:38,710 --> 00:03:43,660
そして、if文をここに追加します。

49
00:03:43,990 --> 00:03:51,930
そして、この状態人物の長さが2より小さいか等しい場合。

50
00:03:51,960 --> 00:03:54,040
だから2人以下の人しか残っていない。

51
00:03:54,040 --> 00:04:01,990
私はクラスが変数を取ると実際に戦争のちょうどESX 6のバージョンです。

52
00:04:02,000 --> 00:04:05,750
しかし私はKonstをここで使うことができます。なぜなら私は決して新しい価値を割り当てないからです。

53
00:04:06,000 --> 00:04:15,270
これが2未満の場合、通常のjavascriptプッシュメソッドを押して、retクラスをDicereにプッシュします。

54
00:04:15,340 --> 00:04:16,510
&nbsp;

55
00:04:16,800 --> 00:04:22,750
ですから、この時点で、クラスはこのように読み込まれます。

56
00:04:22,790 --> 00:04:25,680
私はまた、チェックする場合は番号を追加します。

57
00:04:25,880 --> 00:04:32,760
国家の長さが1よりも小さいか等しいかどうかを私は言うでしょう。

58
00:04:32,940 --> 00:04:36,090
そして、これが条件の場合は他にはないことに注意してください。

59
00:04:36,090 --> 00:04:41,460
それはちょうど別のif文であるか、または両方を実行したいので、最初のif文の後にチェックが来るかどうかです。

60
00:04:41,550 --> 00:04:48,360
したがって、それが1より小さいか等しい場合、それは再びクラスに到達し、別のクラスを大胆なクラスにプッシュします。

61
00:04:48,840 --> 00:04:50,290
&nbsp;

62
00:04:50,610 --> 00:04:57,590
だからこの時点でクラスは読み込まれ、太字になっています。

63
00:04:57,620 --> 00:05:04,400
ここで人物配列に2つの要素しかない場合は、読み込んだだけですが、この条件はここでは間違っているので、これをスキップします。

64
00:05:04,790 --> 00:05:08,000
&nbsp;

65
00:05:08,000 --> 00:05:13,450
今度は、このように見えるか、またはこれと同じように、空の配列になる配列の配列があります。

66
00:05:13,520 --> 00:05:20,680
私たちが3つの要素をすべて持っているので、私はここにそれを割り当てたいと思っています。そして、このようなクラスは今は配列なのでもう動作しません。

67
00:05:20,680 --> 00:05:21,530
&nbsp;

68
00:05:21,550 --> 00:05:23,720
私たちはここで文字列を渡す必要があります。

69
00:05:24,100 --> 00:05:28,470
さて、私は単に、間に空のスペースで表示を呼び出すことができます。

70
00:05:28,480 --> 00:05:34,000
今年私が割り当てたクラスの空白文字は、この前にこれを行い、新しい変数に格納することもできます。

71
00:05:34,000 --> 00:05:36,520
&nbsp;

72
00:05:36,650 --> 00:05:43,780
これで私は文字列を割り当てることになりました。文字列を割り当てるのは、読んだり読み込んだりしたり、太字で間に空白を入れて読むことは一切ありません。

73
00:05:43,990 --> 00:05:47,050
&nbsp;

74
00:05:47,500 --> 00:05:51,670
それでは、これで私がこれを保存して、今すぐリロードすれば元に戻しましょう。

75
00:05:51,760 --> 00:05:54,100
デフォルトでは黒いテキストです。

76
00:05:54,100 --> 00:05:57,030
さあ、人について話しましょう。ひとりを取り除きましょう。

77
00:05:57,190 --> 00:05:59,410
今は赤ですが太字ではありません。

78
00:05:59,440 --> 00:06:02,750
ナンバーワンを削除すればボルトと呼ばれます。

79
00:06:03,010 --> 00:06:09,370
そして今、あなたがそれを参照したならば、それは明らかにそれが動的にそれを追加してクラスを割り当てる方法を示すようになります。

80
00:06:09,430 --> 00:06:11,540
&nbsp;

81
00:06:11,710 --> 00:06:13,960
そして私はそれを十分に強調することはできません。

82
00:06:14,260 --> 00:06:16,310
すべてがジャバスクリプトです。

83
00:06:16,330 --> 00:06:21,940
&nbsp;

84
00:06:22,060 --> 00:06:27,760
&nbsp;

85
00:06:27,760 --> 00:06:31,080
ここでクラスの配列を使って作業するのは、通常の配列で行うのと同じです。通常の配列で普通のjavascriptで行います。最後に行うことは、ここで実際に文字列を割り当てる必要があります結合メソッド

86
00:06:31,450 --> 00:06:39,040
もちろん、配列を作るために必要なロジックを持っていても、C-sクラスの文字列を他の方法で配列に結びつける必要はありません。

87
00:06:39,040 --> 00:06:44,110
&nbsp;

88
00:06:44,170 --> 00:06:47,410
たぶんデフォルトで文字列であるユーザー入力を受け取ります。

89
00:06:47,410 --> 00:06:53,410
有効な文字列であるものはすべてクラス名に代入することができ、C S

90
00:06:53,440 --> 00:07:00,220
Sファイルに設定したクラスに合ったC S Sクラスのリストとして扱われます。

91
00:07:00,220 --> 00:07:05,760
そこで、あなたはamygdaleにStultsを割り当てて編集し、追加されたクラスを動的に割り当てる方法を学びました。

92
00:07:05,770 --> 00:07:07,060
&nbsp;
