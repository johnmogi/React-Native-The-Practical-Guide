1
00:00:02,200 --> 00:00:07,840
だから、スタイルとクラスを動的に設定する方法を学びました。インラインスタイルの限界に戻って、今私たちにとって最も重要なことを学びましょう。

2
00:00:07,900 --> 00:00:11,790
&nbsp;

3
00:00:11,890 --> 00:00:20,500
&nbsp;

4
00:00:20,860 --> 00:00:27,340
&nbsp;

5
00:00:27,370 --> 00:00:29,680
私たちがボタンのhabereにHubnerスタイルを割り当てることができないという事実は、単にコリンhabereで作成するのと同じように、擬似セレクタであることを意味します。つまり、そのコロンで示されるアドレスセレクタに基づいたセレクタです。

6
00:00:29,780 --> 00:00:37,720
今私たちは現在のアプリケーションでこれを割り当てることができません。ここではボタンのスタイルをいくつか割り当てたり作成したりするスタイルのjavascriptオブジェクトがあります。

7
00:00:37,720 --> 00:00:41,860
&nbsp;

8
00:00:41,940 --> 00:00:43,510
うん、私たちはどうやってそれを正しく設定するのだろうか？

9
00:00:43,510 --> 00:00:45,680
ホバーは財産としてのオッシャーではありません。

10
00:00:46,120 --> 00:00:52,670
だから私たちはスタイリングでこの問題を解決することができましたが、C

11
00:00:52,690 --> 00:00:58,390
Ssファイルですが、すでにこの皿柄はこのコンポーネントだけに限定されていて、すべてのボタンとアプリケーションはスタイリングを得ると述べました。

12
00:00:58,390 --> 00:00:59,440
&nbsp;

13
00:00:59,440 --> 00:01:07,600
はい、私たちはいくつかのユニークなCSS

14
00:01:07,600 --> 00:01:14,830
IDやクラスでこの問題を回避できますが、ここでこのDSインラインスタイルを使用する可能性もあります。実際に疑似セレクタとメディアを使用できるのであれば、

15
00:01:14,830 --> 00:01:22,600
&nbsp;

16
00:01:22,780 --> 00:01:23,680
&nbsp;

17
00:01:23,720 --> 00:01:28,610
私たちの通常のJavaScriptのインラインスタイルはどこですか？

18
00:01:28,720 --> 00:01:35,620
デフォルトではもちろん不可能ですが、私たちのアプリケーションに機能不全を追加するために非常に普及しているサードパーティのパッケージを追加することができます。

19
00:01:35,830 --> 00:01:38,800
&nbsp;

20
00:01:38,920 --> 00:01:40,610
だからそれをやりましょう。

21
00:01:40,660 --> 00:01:43,500
そのためには、新しいパッケージをインストールする必要があります。

22
00:01:43,540 --> 00:01:49,740
そして、ここで私のMacやWindows上で普通の端末を開くと、コマンドプロンプトになります。

23
00:01:49,840 --> 00:01:53,970
これは、Visual StudioコードをMicrosoftに統合した端末です。

24
00:01:54,010 --> 00:01:59,200
また、統合された端末を表示するオーバーダイオプションを開くこともできます。

25
00:01:59,200 --> 00:02:02,590
これはあなたのマシン上にある内部と同じです。

26
00:02:02,590 --> 00:02:08,590
通常アクセスしても自動的にプロジェクトフォルダに移動すると、NPMインストールパッケージがインストールされます。

27
00:02:08,590 --> 00:02:11,320
&nbsp;

28
00:02:11,350 --> 00:02:19,030
ダッシュダッシュを追加して、パッケージドットジェイソンのエントリを保存して、作業番号を修正してプロジェクトを簡単に共有できるようにします。

29
00:02:19,030 --> 00:02:21,310
&nbsp;

30
00:02:21,610 --> 00:02:23,950
そしてパッケージはラジウムと呼ばれます。

31
00:02:23,950 --> 00:02:30,070
Enter Nowボタンを押すだけで、このパッケージをダウンロードしてプロジェクトに追加し、プロジェクトを使用できるようになります。

32
00:02:30,100 --> 00:02:31,300
&nbsp;

33
00:02:31,300 --> 00:02:39,730
Radiumは、私たちが擬似セレクタとメディアクエリでインラインスタイルを使用できるようにする、再動作のためのポピュラーなパッケージです。

34
00:02:39,730 --> 00:02:40,770
&nbsp;

35
00:02:40,780 --> 00:02:42,820
とても素晴らしいです。

36
00:02:42,820 --> 00:02:49,180
インストールが完了したら、ターミナルをもう一度閉じることができ、今すぐ使用して使用を開始することができます。

37
00:02:49,180 --> 00:02:49,700
&nbsp;

38
00:02:49,700 --> 00:02:53,530
私たちは、まずそれを使用するためにそれを次のものにインポートしなければなりません。

39
00:02:53,530 --> 00:02:56,430
そして、これはあなたのせいかもしれません。

40
00:02:56,470 --> 00:02:59,420
もちろん、落ちる人はもちろんFaltuかもしれません。

41
00:02:59,620 --> 00:03:06,730
アスファルトで作業してみましょう。なぜなら、これを可能にするためにハバードの状態を追加したいボタンがあるからです。

42
00:03:06,730 --> 00:03:08,230
&nbsp;

43
00:03:08,270 --> 00:03:11,220
まず、ラジウムを輸入する必要があります。

44
00:03:11,290 --> 00:03:16,070
したがって、インポートステートメントはあなたの位置は重要ではありませんが、ファイルの先頭になければなりません。

45
00:03:16,230 --> 00:03:19,690
すべてラジウムからのラジウム。

46
00:03:19,690 --> 00:03:21,520
これは使用できる構文です。

47
00:03:21,640 --> 00:03:28,520
今すぐインポートされたあなたはあなたのアプリをエクスポートするところまでスクロールすることができます。そこでは関数としてラジウムを呼び出し、あなたのアプリをラップすることができます。

48
00:03:28,520 --> 00:03:33,090
&nbsp;

49
00:03:33,110 --> 00:03:35,940
今は高次成分と呼ばれています。

50
00:03:35,990 --> 00:03:39,230
私たちはすべて後で私たちのコースプロジェクトを訓練します。

51
00:03:39,440 --> 00:03:45,860
それは非常に派手に見えるかもしれませんが、結局のところ、あなたのコンポーネントをラップするコンポーネントであり、何らかの余分な機能を追加しています。

52
00:03:45,860 --> 00:03:48,580
&nbsp;

53
00:03:48,650 --> 00:03:54,260
この場合、あなたのスタイルを解析し、今すぐ使用できるいくつかの余分な機能を理解する余分な構文があります。

54
00:03:54,260 --> 00:03:55,910
&nbsp;

55
00:03:56,000 --> 00:04:04,160
これは、CLOSで作成された両方のコンポーネントで使用でき、コンポーネントと機能コンポーネントを拡張します。

56
00:04:04,250 --> 00:04:13,680
そこで、もしラジウムからラジウムを輸入してラジウムを加えれば、ここでラジウムの人を輸出することもできます。

57
00:04:13,750 --> 00:04:15,700
両方の作品。

58
00:04:15,940 --> 00:04:22,930
今すぐ追加しました。私たちはいくつかの新機能を追加したり使うことができます。もちろん、ラジウムはすべてスタイルに関するものなので、私たちはこれをスタイルで行います。

59
00:04:23,110 --> 00:04:25,560
&nbsp;

60
00:04:25,570 --> 00:04:29,590
最後にパターンに割り当てられるスタイルがあります。

61
00:04:29,950 --> 00:04:37,780
私は趣味やスタイルを追加したいとラジウムが追加され、あなたの輸出をラップするだけで新しい小道具を追加することができます。

62
00:04:37,780 --> 00:04:44,210
彼は引用符のコロンのハンマーまたは他の疑似セレクター。

63
00:04:44,260 --> 00:04:46,720
すべての疑似セレクタがサポートされています。

64
00:04:46,780 --> 00:04:52,000
あなたは引用符で囲む必要があります。なぜなら、コロンで始まっているので、文字列としてjavascriptプロパティを作成することができますか、無効な文字がないそれら。

65
00:04:52,000 --> 00:04:58,840
&nbsp;

66
00:04:58,840 --> 00:05:03,160
&nbsp;

67
00:05:03,250 --> 00:05:06,890
私たちが以前にしたように、これらのすべてのObertプロパティのように。

68
00:05:07,420 --> 00:05:13,020
今度は、値は単純に習慣状態のためのスタイルのセットです。

69
00:05:13,120 --> 00:05:22,180
私は今、緑色のボタンの背景色を明るい緑色に、テキストの色を黒色に設定します。

70
00:05:22,810 --> 00:05:25,590
&nbsp;

71
00:05:25,590 --> 00:05:36,100
たぶん、私はもちろん、そこに私の背景色をオーバーライドするだけで、スタイルを設定し、文字列であるので今は点滅しないで、そこにホバーを上書きするだろう。

72
00:05:36,190 --> 00:05:41,650
&nbsp;

73
00:05:41,650 --> 00:05:44,320
角括弧を使う必要があります。

74
00:05:44,420 --> 00:05:53,000
そこでここでは、新しい値に新しいJavascriptオブジェクトを割り当てます。ここでは、このような明るい赤と黒のテキストを使用します。

75
00:05:53,000 --> 00:05:54,620
&nbsp;

76
00:05:54,620 --> 00:06:02,600
これで、擬似セレクタとして有効なSEUSであるプロパティを割り当てることができるラジウム機能を使用しています。

77
00:06:02,600 --> 00:06:03,640
&nbsp;

78
00:06:03,890 --> 00:06:07,760
ラジウムを利用して、まだそれを働かせてください。

79
00:06:07,850 --> 00:06:13,220
&nbsp;

80
00:06:13,220 --> 00:06:22,320
これを保存して他のすべてのファイルを保存し、アプリケーションをリロードすると、赤いボタンにも変更スタイリングが表示されますが、それは赤色に上書きされません。

81
00:06:22,350 --> 00:06:24,090
だから別の色を試してみましょう。

82
00:06:26,570 --> 00:06:27,760
サラモンはうまくいく。

83
00:06:27,790 --> 00:06:32,740
明るい赤は存在しませんでしたが、私がSOLMANに変えれば、今でもうまくいきます。

84
00:06:33,220 --> 00:06:36,570
だから、これはあなたが両方の世界の最高を持っているので、これはかなりクールです。

85
00:06:36,670 --> 00:06:41,620
通常のCSO擬似セレクタを追加することができます。ここでは、JavaScriptコード内で簡単に編集できるスコープのスタイルがあります。

86
00:06:41,620 --> 00:06:45,980
&nbsp;

87
00:06:46,060 --> 00:06:50,750
これでラジウムは擬似セレクタの使用を制限していません。

88
00:06:51,010 --> 00:06:53,120
メディアクエリを追加することもできます。

89
00:06:53,260 --> 00:06:58,470
人のコンポーネントでこれをやってみましょう。次の講義でそれをやりましょう。
