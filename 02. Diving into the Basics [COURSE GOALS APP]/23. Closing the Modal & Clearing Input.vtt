WEBVTT

00:02.330 --> 00:09.590
So the ad button here calls on ad goal and that basically forwards the goal to app address which is

00:09.590 --> 00:10.860
exactly what we need.

00:11.030 --> 00:16.660
But what we also need to do is we need to make sure that when we add a new goal the motor gets closed.

00:16.700 --> 00:22.790
Now keep in mind that we in the end control the modal visibility from inside the aptly us file because

00:22.790 --> 00:29.690
there we have to is at Mode state which we're changing when we click this button here the ad New Gold

00:29.690 --> 00:31.050
button for example.

00:31.220 --> 00:38.900
And this state value is ad boat is for awarded to goal input where we then use it to control the visibility

00:38.900 --> 00:40.310
of the model.

00:40.340 --> 00:46.580
So in order to make sure that the motor disappears we simply have to change is ad mode again instead

00:46.580 --> 00:52.270
of the app just follow because the new value will then automatically be forwarded to goal input.

00:52.310 --> 00:56.990
So all we have to do is an ad goal handler where we set the course goals.

00:56.990 --> 01:03.920
We also have to set is ad mode to false because we're done adding a little side note the way react works

01:03.920 --> 01:06.500
if you're setting two states after each other.

01:06.590 --> 01:08.230
It will batch these together.

01:08.270 --> 01:14.060
It will not re render the component twice after first change and after the second change instead it

01:14.060 --> 01:19.460
will basically apply all state changes at once and only rearranged the component ones which of course

01:19.460 --> 01:20.110
is good.

01:20.120 --> 01:23.240
Otherwise you would have an unnecessary rerun or cycle there.

01:23.240 --> 01:29.960
And this is simply a nice optimization react does for us so we can absolutely change two different states

01:29.990 --> 01:31.760
after each other like this.

01:31.760 --> 01:38.740
And with that the models should know actually all the disappear if we set this to false let's test it

01:38.740 --> 01:40.430
here on Iaw.

01:40.480 --> 01:46.320
If I add learn react native here click ad this disappears.

01:46.420 --> 01:52.530
Now learn way more dissolve so it works.

01:52.530 --> 01:54.510
They can also still delete items.

01:54.740 --> 01:58.910
Now to test us on Android same procedure as before.

01:59.060 --> 02:01.310
Let's actually restart this on Android

02:05.490 --> 02:11.840
click Add you go and learn react native here click Add and discloses it.

02:11.850 --> 02:23.740
Now let's all learn way more here like this and this all works correctly now two tiny improvements.

02:23.740 --> 02:29.800
I still want to apply for one I want to clear the input once we're done and in addition I want to provide

02:29.800 --> 02:36.550
a cancel button so Dad alternatively instead of adding this We could also cancel here too close to modal

02:36.610 --> 02:40.290
without adding an IDE because right now that's not something we can do.

02:40.300 --> 02:43.300
Let's start with clearing our input here.

02:43.300 --> 02:48.480
After we entered something for that and goal input in the end we have that entered goal and we need

02:48.480 --> 02:49.530
to reset this.

02:49.560 --> 02:56.370
Once we add a new goal now of course we add a new goal when we press that add button and there in the

02:56.370 --> 03:01.690
end we trigger a function which we get with the help of the on ad gold prop.

03:01.700 --> 03:07.110
Now to all the clear our input what we can do here is we can add a function instead of the goal input

03:07.290 --> 03:12.440
component add goal handler or whatever you want to call it.

03:12.560 --> 03:19.310
This is a function which doesn't have to take any argument and in the end it's now this function which

03:19.310 --> 03:20.270
I want to trigger.

03:20.300 --> 03:23.330
So I want to trigger at goal handlers.

03:23.360 --> 03:29.660
So my own function this component now here I want to call props on ad goal without bind.

03:29.660 --> 03:35.630
Here we can just call it like this because when this function runs I want to execute here we're just

03:35.630 --> 03:39.340
passing a pointer at this function without parentheses.

03:39.340 --> 03:44.270
So here we must not have parentheses to not execute this too early here.

03:44.270 --> 03:49.460
We absolutely need parentheses because this only runs Windows function executes and that is when I want

03:49.460 --> 03:52.340
to trigger do you function in my parent component.

03:52.340 --> 03:59.000
So in the app component here and here too on ad goal of course I still want to forward my entered goal

03:59.000 --> 03:59.390
here.

03:59.390 --> 04:03.770
So this state I want to forward this but thereafter I also want to clear it.

04:04.010 --> 04:06.140
So thereafter I'll set set entered.

04:06.140 --> 04:10.930
Goal To an empty string again which will reset the text we entered here.

04:10.970 --> 04:12.120
So that's one thing.

04:12.140 --> 04:18.770
The other thing is a button that allows us to close this for Dad we can add a button here and dad button

04:18.950 --> 04:22.100
could have a title of cancel because that's the end.

04:22.100 --> 04:23.990
What does button should do.

04:23.990 --> 04:24.880
And for.

04:24.890 --> 04:29.410
But it might be nice to not have to default blue color but change that color.

04:29.420 --> 04:33.410
And you can't do this by adding the color prop here.

04:33.410 --> 04:39.250
For example we could set this to red here because red in my opinion is a nice color for a cancel button

04:40.850 --> 04:44.960
if we save this and we test this year on Iowa.

04:44.960 --> 04:47.540
We see the cancel button and ante add button.

04:47.690 --> 04:55.300
And now if I learn react native here and I add this this is added and if I reopen this you see it was

04:55.300 --> 05:02.830
cleared and cancel of course doesn't do anything though because we need to connect cancel 2D app component

05:02.950 --> 05:06.280
where we control the visibility by controlling these is at mode.

05:07.330 --> 05:16.090
So here we can also add another function handler in the app component now cancel goal addition handler

05:16.120 --> 05:16.870
or something like that.

05:16.870 --> 05:21.040
It's a very long name I just want to be clear about what this does and when it's called.

05:21.040 --> 05:26.800
So here we have to cancel goal additional handler and in the end here we can simply set is at mode 2

05:26.800 --> 05:28.540
false which will close the model.

05:29.050 --> 05:31.020
And of course we're not doing anything else.

05:31.030 --> 05:36.550
We're not changing our course goals because we canceled the addition and now we can forward this to

05:36.550 --> 05:38.590
goal item critical input.

05:38.650 --> 05:45.580
So to our component here there we can add on cancel prop the name of that problem of course is up to

05:45.580 --> 05:48.330
you because it's your own prop on your own component.

05:48.580 --> 05:53.710
And I've forward a pointer at cancel goal addition handler 2 on cancel.

05:54.000 --> 05:59.480
And now instead of goal input we can trigger on cancel upon a press of this button.

05:59.500 --> 06:04.990
So here we add on press and we want to trigger props dot on cancel here.

06:04.990 --> 06:12.690
So the function we're receiving on our own cancel prop with that the cancel button should work yeah.

06:12.770 --> 06:14.260
Works just fine.

06:14.510 --> 06:17.830
Now it should also work on Android of course but to test it.

06:17.900 --> 06:19.310
Same procedure as always.

06:19.310 --> 06:22.930
Let's close it and restarted and thereafter.

06:22.940 --> 06:31.340
Let's see if clearing the input works if I enter or learn react native here click Add yep that's empty

06:31.340 --> 06:33.330
and cancel all the works.

06:33.350 --> 06:38.300
Now regarding the styling here on Android it would be nice to have some spacing between the buttons

06:38.390 --> 06:43.150
or actually on both platforms maybe have these buttons sit next to each other.
