1
00:00:02,200 --> 00:00:05,460
だから実際のリストとしてこれを入れないで始めましょう。

2
00:00:05,620 --> 00:00:11,510
私たちが一見を持っていれば、私たちはこの人の配列の中に自由な要素を持っています。

3
00:00:11,560 --> 00:00:17,000
もう一度Auburnやフレームワークであなたが知っているかもしれないが、それは問題ではない。

4
00:00:17,050 --> 00:00:18,530
とにかくここは違う。

5
00:00:18,650 --> 00:00:26,920
あなたのような他のフレームワークでは、あなたは前に指示を持っているでしょう。

6
00:00:26,920 --> 00:00:28,900
&nbsp;

7
00:00:29,120 --> 00:00:31,760
あなたが学んだことはすべてここにjavascriptです。

8
00:00:32,170 --> 00:00:39,760
条件付きのコンテンツの場合と同じように、通常のjavascriptを使用して、デフォルトのツールでリストを処理します。

9
00:00:39,760 --> 00:00:40,950
&nbsp;

10
00:00:40,990 --> 00:00:45,240
Javascriptを使うと、リストを扱うことができます。

11
00:00:45,340 --> 00:00:47,070
どのように見えますか？

12
00:00:47,140 --> 00:00:55,820
私たちの場合、私たちはその人の井戸を持っています。私たちは、GSXコード内で何かをダイナミックにレンダリングするために、中括弧を再度使用します。

13
00:00:55,820 --> 00:00:58,400
&nbsp;

14
00:00:58,760 --> 00:01:07,220
そして、我々はこの州の人々が単にこの配列を参照するように、州の人の配列をレンダリングしたい。

15
00:01:07,220 --> 00:01:09,170
&nbsp;

16
00:01:09,170 --> 00:01:10,860
これだけではこのトリックはできません。

17
00:01:10,940 --> 00:01:15,190
これはjavascriptオブジェクトの配列で、単語をコード化することはできません。

18
00:01:15,260 --> 00:01:18,780
ティム・Lは何かリ・アクションがここで理解できないだろう。

19
00:01:19,130 --> 00:01:24,930
だから我々は、有効でないjavascriptのこの配列を親切な言葉にする必要があります。

20
00:01:24,950 --> 00:01:25,460
J.

21
00:01:25,480 --> 00:01:34,310
X 2 valid J us XとJavascript vanilla javascriptは、配列を変換する関数を提供しています。

22
00:01:34,520 --> 00:01:42,500
マップ関数マップは、ここではperson配列のような指定された配列のすべての要素を他のものにマップするだけです。

23
00:01:42,980 --> 00:01:45,070
&nbsp;

24
00:01:45,320 --> 00:01:50,720
これは、指定された配列内のすべての要素に対してメソッドを実行することで行います。

25
00:01:50,720 --> 00:01:58,410
したがって、この配列のこのメソッドまたはこの関数は、ここでmapメソッドに渡されます。

26
00:01:58,820 --> 00:02:02,040
配列の要素を入力として受け取ります。

27
00:02:02,060 --> 00:02:05,950
だから一人の人がこの議論の名前を完全にあなた次第です。

28
00:02:05,960 --> 00:02:11,580
私はここに無名関数を書いています。実際にここに矢印関数を書いています。

29
00:02:11,750 --> 00:02:18,590
だから私は地図のメソッドに渡す6矢印関数が奇妙に見えるかもしれませんが、実際にはバニラのJavascript

30
00:02:18,590 --> 00:02:25,070
ESXですが、javascriptではなく、JはXのようなものではありません。

31
00:02:25,100 --> 00:02:28,070
だから、それは単一の中括弧の中にあるのです。

32
00:02:28,670 --> 00:02:36,110
ですから、mapメソッドに無名関数として渡すこの関数はpersons配列のすべての要素に対して実行され、Javascriptは自動的に各要素をその要素の入力としてその関数への入力として与えます。

33
00:02:36,170 --> 00:02:43,250
&nbsp;

34
00:02:43,340 --> 00:02:45,310
&nbsp;

35
00:02:45,320 --> 00:02:47,250
この場合、それは私たちの人です。

36
00:02:47,270 --> 00:02:53,180
もう一度、あなたが望むものは何でも名前を付けることができますが、それは人間の配列なので、おそらく意味があります。

37
00:02:53,570 --> 00:02:55,670
そして、あなたは何かを返さなければなりません。

38
00:02:55,910 --> 00:03:01,010
このアイテムをマップしたいものを返す必要があります。

39
00:03:01,010 --> 00:03:03,850
だから我々は、javascriptのオブジェクトと人の配列を持っています。

40
00:03:03,870 --> 00:03:05,080
あなたの1つのオブジェクト。

41
00:03:05,090 --> 00:03:10,530
2つのオブジェクトは3つのオブジェクトで、これを別のものに変換します。

42
00:03:10,580 --> 00:03:15,830
ここで便利に使用しているマップメソッドは、単に新しい配列を返します。

43
00:03:16,010 --> 00:03:24,290
GSXの内部でこのような新しい配列を印刷するだけで、基本的にはこの新しい配列の個々の要素を取り出し、それらを2つDomにレンダリングしようとします。

44
00:03:24,290 --> 00:03:28,700
&nbsp;

45
00:03:28,850 --> 00:03:31,490
彼らが有効な場合は、私たちはxです。

46
00:03:31,520 --> 00:03:38,270
だから私たちの目標は単純にここでセリアXを返すことです。その結果、人の配列のすべての要素がxの代表としてjにマップされます。

47
00:03:38,390 --> 00:03:41,230
&nbsp;

48
00:03:41,540 --> 00:03:49,940
ここで私は最後に人のコンポーネントにマップしたいのですが、それぞれの人のjavascriptオブジェクトを人のコンポーネントと私のプロジェクトとして表現することができるからです。

49
00:03:49,940 --> 00:03:56,330
&nbsp;

50
00:03:56,480 --> 00:03:59,950
そしてここで私たちが入力として得た人を使うことができます。

51
00:04:00,080 --> 00:04:07,730
&nbsp;

52
00:04:07,730 --> 00:04:15,200
&nbsp;

53
00:04:15,200 --> 00:04:15,930
それで、機能不全の個々の要素が実行され、そこには、x人の年齢が複数の行に分割されて読みやすくなる年齢のために同じ名前のプロパティが同じコースに追加されています。

54
00:04:16,160 --> 00:04:18,460
そしてそれは実際にそれです。

55
00:04:18,560 --> 00:04:25,410
それで私は他のすべての人を取り除くことができ、私はただ単にそれらを取り除くでしょう。

56
00:04:25,520 --> 00:04:33,290
これが何をもたらすのかは、それがクリックされた人物のリストを印刷し、名前を変更することは、現在は機能しません。

57
00:04:33,290 --> 00:04:37,040
&nbsp;

58
00:04:37,820 --> 00:04:44,990
そして、それは単に、このjavascriptの配列をまだjavascriptにマッピングすることでダスターになっていますが、その内部にGSXオブジェクトを持つ配列が自動的に引き出されて画面にレンダリングされます。

59
00:04:45,050 --> 00:04:51,820
&nbsp;

60
00:04:52,190 --> 00:04:59,460
ファイルを保存して、私がここで私の財布を話すなら、私たちはすべての財布を見ると結果を見てみましょう。

61
00:04:59,780 --> 00:05:06,460
また、重要な財産を割り当てるべきであることを既に知っている警告のほかに、新しい警告が出されます。

62
00:05:06,550 --> 00:05:08,560
いいえ、私は間違いなくそれに戻ってくるでしょう。

63
00:05:08,570 --> 00:05:10,050
それは非常に重要です。

64
00:05:10,070 --> 00:05:13,710
基本的には動作していますが、すでに見ることができます。

65
00:05:13,760 --> 00:05:19,910
私たちの配列を別のものにマッピングすることによって、この要素のリストをレンダリングしています。

66
00:05:19,910 --> 00:05:25,610
次に、このリストの内容をさらに深く掘り下げ、そのキーの概要と、配列への変更やイベントリスナーを使用して変更する方法について説明します。

67
00:05:25,610 --> 00:05:30,390
&nbsp;
