1
00:00:02,250 --> 00:00:08,530
&nbsp;

2
00:00:08,550 --> 00:00:14,520
&nbsp;

3
00:00:14,580 --> 00:00:16,240
最後の講義では、コンテンツを動的に条件付きでレンダリングする方法を学びます。私は言うべきであり、死んでいるのは、ここのすべてがjavascriptであり、それは一般的に反応のマントラです。

4
00:00:16,320 --> 00:00:18,160
すべてがjavascriptです。

5
00:00:18,180 --> 00:00:24,600
私はここでやっているようにすべての式を回して使うことは必ずしも最適ではないと言っています。

6
00:00:24,600 --> 00:00:25,700
&nbsp;

7
00:00:25,710 --> 00:00:33,930
しかし、アプリケーションが成長し、条件を入れ子にすると、どの表現が何を担当するのかを把握するのが難しくなる可能性があります。

8
00:00:33,930 --> 00:00:36,330
&nbsp;

9
00:00:36,360 --> 00:00:39,250
GSXコードでそれらを見つけることができます。

10
00:00:39,750 --> 00:00:43,830
だから私はこの講義であなたを見せたいと思っています。

11
00:00:43,830 --> 00:00:48,290
ろくろうと呼ばれているものを取り除いてみましょう。

12
00:00:48,390 --> 00:00:53,480
だから、すべての人がいつも再びレンダリングされるように。

13
00:00:53,590 --> 00:00:59,640
うわー、私は死だけではなく表現部分を削除するようにしてください。

14
00:00:59,790 --> 00:01:04,270
だから私たちは出発点に戻ってきましたが、今はすべてを話すことができません。

15
00:01:04,350 --> 00:01:11,390
今、すべてがJavascriptであり、JでXと一緒にやっていることは、Xはただ死んでいるということを心に留めておいてください。

16
00:01:11,390 --> 00:01:16,790
私たちは、renderメソッドでreturn文を返しています。

17
00:01:16,800 --> 00:01:23,310
&nbsp;

18
00:01:23,310 --> 00:01:31,330
ここで、再実行すると、実行する画面を更新する必要があると判断したときに何かを画面にレンダリングするときに、ここでのすべてのものに対する戻り式だけでなく、Methotをレンダリングする際に重要なことがあります。

19
00:01:31,390 --> 00:01:32,820
&nbsp;

20
00:01:33,030 --> 00:01:41,640
したがって、このコンポーネントをレンダリングするときはいつでも、renderメソッド内のすべてが実行されるため、これを利用できます。

21
00:01:42,060 --> 00:01:43,790
&nbsp;

22
00:01:43,860 --> 00:01:47,720
私たちは何かを返す前にここにコードを追加することができます。

23
00:01:47,730 --> 00:01:52,400
ここにnamesという名前の変数を追加します。これはNULLに設定されます。

24
00:01:52,470 --> 00:01:54,880
これがデフォルトになります。

25
00:01:54,900 --> 00:01:57,650
あなたは好きな名前で贈り物をすることができました。

26
00:01:57,720 --> 00:02:00,060
次に、通常のIF文を追加します。

27
00:02:00,120 --> 00:02:03,150
私はXの中にいないので、ここでこれを行うことができます。 私はここで私の通常のJavaScriptコードの中にいる私は今それが国家ショーの人であるかどうかをチェックしたい。

28
00:02:03,180 --> 00:02:10,500
show personsはブール値であることを覚えておいてください。それはtrueかfalseのどちらかです。

29
00:02:10,500 --> 00:02:14,740
必ずしもそれを真と偽と比較する必要はありません。

30
00:02:14,760 --> 00:02:17,930
&nbsp;

31
00:02:17,940 --> 00:02:26,460
私はこれを省略することができますので、チェックしなければなりません。これが真である場合、私は自分の個人変数をXコードとしていくつかのjに設定したいと常に心に留めておきます。

32
00:02:26,790 --> 00:02:29,850
&nbsp;

33
00:02:29,910 --> 00:02:36,150
私はちょうどGSXが最終的にコンパイルする要素を再作成要素の結果に設定することもできます。

34
00:02:36,140 --> 00:02:37,050
今ここでコードを折り返します。

35
00:02:37,290 --> 00:02:39,390
私の人。

36
00:02:39,420 --> 00:02:40,860
私は内部の人と一緒にデフをカットしてここに追加します。

37
00:02:41,190 --> 00:02:48,300
今私がやっていることは次のとおりです。

38
00:02:48,300 --> 00:02:50,310
デフォルトでは人。

39
00:02:50,430 --> 00:02:51,450
この変数はnullです。

40
00:02:51,450 --> 00:02:52,970
&nbsp;

41
00:02:53,160 --> 00:02:59,800
しかし、この状態を表示する人が実際にこのGSXコードを保持している真の人であれば、その人の変数を取ってGSXコードで出力することができます。

42
00:02:59,800 --> 00:03:05,820
&nbsp;

43
00:03:05,820 --> 00:03:14,400
&nbsp;

44
00:03:14,610 --> 00:03:22,230
&nbsp;

45
00:03:22,320 --> 00:03:29,010
&nbsp;

46
00:03:29,030 --> 00:03:35,300
&nbsp;

47
00:03:35,310 --> 00:03:42,090
私は最後に戻りますので、ここではデフォルトでSieberであるその人の変数を参照して人を出力することができます。また、このページを再実行する必要がある場合このコンポーネントは私が言うべきことは、プレレンダリングが発生するたびに起こるからです。更新を引き起こす2つの事のうちの1つが状態であることに留意して、私たちが常に最新の状態を考慮し、変化する。

48
00:03:42,120 --> 00:03:43,430
これで、このファイルを保存してアプリケーションに戻ることができます。

49
00:03:43,500 --> 00:03:49,560
そこに私達はconに行く。 このエラーは表示されません。

50
00:03:49,570 --> 00:03:53,040
私はページ2に関連して、最新のバージョンを使用していることを明確に確認できます。

51
00:03:53,280 --> 00:03:57,410
そして今、私は人をトグルして、あなたが同じ行動を見る前に尋ねます。

52
00:03:57,660 --> 00:04:03,410
&nbsp;

53
00:04:03,460 --> 00:04:10,080
これをトグルで読むことができますが、ここではGSXからこのチェックをアウトソーシングするよりエレガントな方法を使用しています。返す前に条件付きで割り当てる変数に戻ります。

54
00:04:10,440 --> 00:04:16,840
しかし、まだレンダリング機能にあります。

55
00:04:16,920 --> 00:04:19,590
しかし、これを帰宅する前に私たちはDを保ちます。 J. XPが返ってくるので、このコンポーネントのコアテンプレートです。

56
00:04:19,600 --> 00:04:27,560
&nbsp;

57
00:04:27,560 --> 00:04:28,050
私たちはそれをきれいに保つと言うことができます、そして、我々はここにこの小さな参考文献しか持たないことを確かめます。

58
00:04:28,050 --> 00:04:34,820
それの中の人は、人を終わらせても、何もしなくても、すべての人にすることができます。

59
00:04:34,830 --> 00:04:40,410
&nbsp;

60
00:04:40,520 --> 00:04:46,470
これは実際に条件付きコンテンツを出力するのに好ましい方法であり、私が使用することをお勧めします。

61
00:04:46,470 --> 00:04:46,980
&nbsp;
