1
00:00:02,340 --> 00:00:08,800
このモジュールでは、条件付きでコンテンツを出力し、リストを出力することについて多くのことを学びます。

2
00:00:08,850 --> 00:00:12,740
そして私はあなたが任務に派遣する前に簡単に要約したいと思います。

3
00:00:12,740 --> 00:00:18,360
それを正しく理解し、理解することが非常に重要なので、それを実践することができます。

4
00:00:18,420 --> 00:00:27,630
私たちは、javascriptを使用して条件付きで出力する必要がある2つの重要なことを学習し、リストに対しても同じことを学びました。

5
00:00:27,630 --> 00:00:29,220
&nbsp;

6
00:00:29,220 --> 00:00:32,910
すべてがjavascriptキーの持ち帰りです。

7
00:00:33,120 --> 00:00:41,280
&nbsp;

8
00:00:41,280 --> 00:00:48,680
あなたは学んだように三項式でそれを行うことができますが、より良いアプローチは、あなたが最終的に返すGSXで出力する変数を作成することです。条件付きで何かをレンダリングしたい場合はifステートメントだけです。

9
00:00:48,690 --> 00:00:51,240
&nbsp;

10
00:00:51,810 --> 00:00:56,700
リストを返すかレンダリングする場合は、マップ演算子を使用します。

11
00:00:56,790 --> 00:01:03,600
配列上でオブジェクトや文字列などのJavaScript配列をJ

12
00:01:03,630 --> 00:01:10,890
S

13
00:01:10,980 --> 00:01:13,710
X要素の配列にマップして再動作させるデフォルトのjavascriptメソッドは、これらの要素を引き出して画面にレンダリングします。

14
00:01:13,830 --> 00:01:19,860
&nbsp;

15
00:01:20,220 --> 00:01:26,820
&nbsp;

16
00:01:26,820 --> 00:01:33,420
また、マップでは、現在この関数が実行されている要素だけでなく、インデックスを終了する必要がある場合は、追加する必要がある要素を削除するためのキーであることがわかります。実際に何かが起こったリストの要素に対して実際にコードを実行するために名前を更新するためにここで見ることができるようなツールがいくつかあります。

17
00:01:33,450 --> 00:01:42,180
&nbsp;

18
00:01:42,300 --> 00:01:47,530
あなたはここで多くの役に立つことを学びますが、いつものように最良の方法はそれを練習することです。

19
00:01:47,550 --> 00:01:52,680
ですから、あなたが今学んだことを自分で実践することができるように、課題に移りましょう。

20
00:01:52,920 --> 00:01:53,860
&nbsp;
