1
00:00:02,210 --> 00:00:08,480
Todos nós realmente aprendemos muito sobre os principais fundamentos do re-agir, especialmente este gênio X, coisa que

2
00:00:08,480 --> 00:00:14,930
é super importante para entender e entender, mas eu também mencionei no primeiro módulo do curso que

3
00:00:15,140 --> 00:00:21,890
o reator é tudo sobre componentes que você constrói seu aplicativo com componentes e reage como uma biblioteca

4
00:00:21,890 --> 00:00:24,410
que facilita a construção desses componentes.

5
00:00:24,590 --> 00:00:27,590
Bem, agora, estamos usando apenas um componente.

6
00:00:27,620 --> 00:00:33,870
Hora de mudar isso e, para isso, vou adicionar um novo arquivo na pasta de origem do nosso projeto.

7
00:00:33,890 --> 00:00:39,020
Na verdade, até mesmo adicionarei uma nova pasta e irei nomeá-la pessoa com uma P. principal.

8
00:00:39,100 --> 00:00:41,220
Esta é uma espécie de convenção que reage.

9
00:00:41,240 --> 00:00:48,620
Você não precisa fazer isso, mas você fornece seus componentes aos arquivos onde você os cria personagens iniciais de

10
00:00:48,620 --> 00:00:54,380
capital e você descreve o que esse componente é espaço e, portanto, aqui eu quero

11
00:00:54,380 --> 00:01:01,490
renderizar algumas informações sobre uma pessoa dentro da pasta da pessoa que está armazenada na pasta de origem

12
00:01:01,490 --> 00:01:04,120
ou na pessoa que js arquivam.

13
00:01:04,220 --> 00:01:09,410
Mais uma vez seguindo esta convenção de ter um personagem inicial e

14
00:01:09,410 --> 00:01:16,420
descrevendo o que esse componente está agora, eu quero criar um componente e já fizemos isso.

15
00:01:16,520 --> 00:01:23,750
Na verdade, conseguimos isso fora da caixa no arquivo JS do pensamento, estendendo a classe de

16
00:01:23,750 --> 00:01:25,580
componente da biblioteca re-act.

17
00:01:25,670 --> 00:01:31,940
Nós podemos usar absolutamente esta abordagem e isso será mais importante depois, quando você aprender sobre o estado,

18
00:01:32,300 --> 00:01:37,800
que basicamente permite que você altere seu componente em tempo de execução, você poderia dizer.

19
00:01:38,060 --> 00:01:43,850
Mas na maioria das vezes você deve usar uma forma diferente de componente.

20
00:01:43,850 --> 00:01:51,620
Ou de criar componentes uma função melhor uma função javascript simples, porque em sua forma mais simples,

21
00:01:51,950 --> 00:01:58,480
um componente é apenas uma função que retorna algum GSX algum HVM de outra forma.

22
00:01:58,520 --> 00:02:03,040
Você poderia dizer Agora, claro, você pode criar uma função com uma palavra-chave de função.

23
00:02:03,050 --> 00:02:08,290
Você poderia nomear uma pessoa aqui com um personagem inicial minúsculo que é um tipo de convenção aqui.

24
00:02:08,330 --> 00:02:13,970
Você poderia usar um capital e, então, você poderia retornar algum gênio X aqui.

25
00:02:13,970 --> 00:02:16,050
Você pode absolutamente fazer isso.

26
00:02:16,070 --> 00:02:22,550
Você também pode usar a sintaxe de Diest cinco para criar uma variável que contenha uma função que,

27
00:02:22,550 --> 00:02:24,570
no final, resultaria no mesmo.

28
00:02:25,070 --> 00:02:29,450
Mas eu vou usar isso como seis neste curso que eu recomendo encarecidamente fazer.

29
00:02:29,450 --> 00:02:32,700
É uma boa prática ao tratar os projetos da Riak.

30
00:02:32,720 --> 00:02:36,080
Isso lhe dá acesso a muitos recursos novos e modernos.

31
00:02:36,170 --> 00:02:42,650
Por isso, vou tratar uma variável não com a palavra palavra-chave, mas com a palavra Konski, porque

32
00:02:42,650 --> 00:02:45,950
não planejo alterar essa variável efetivamente tornando-a constante.

33
00:02:46,070 --> 00:02:48,410
E, portanto, devemos comercializar como tal.

34
00:02:48,530 --> 00:02:51,430
Eu irei nomeá-lo pessoa com um caractere minúsculo.

35
00:02:51,730 --> 00:02:59,930
Como eu disse, você poderia escolher pessoa com maiúscula P, mas muitas vezes você vê o nome da função sendo em minúscula.

36
00:02:59,930 --> 00:03:06,980
Deveria ser o mesmo nome do nome do arquivo ou o nome do componente Asti que deseja usar.

37
00:03:07,100 --> 00:03:12,380
Então eu atribuirei um valor a essa variável ou constante para ser preciso.

38
00:03:12,560 --> 00:03:14,330
E esta deve ser uma função.

39
00:03:14,380 --> 00:03:18,880
Agora, eu poderia usar novamente a função aqui, mas na verdade eu quero usar para sim.

40
00:03:18,920 --> 00:03:20,580
Sintaxe de seis funções.

41
00:03:20,690 --> 00:03:29,810
Esta sintaxe da função de seta, então eu direi o corpo da função de seta da lista de argumento igual.

42
00:03:29,810 --> 00:03:31,310
Este é apenas um seis.

43
00:03:31,310 --> 00:03:35,090
Equivalente à função criada com a palavra-chave da função.

44
00:03:35,090 --> 00:03:41,480
Ele possui algumas vantagens, especialmente quando se trata dessa palavra-chave, então eu recomendo

45
00:03:41,480 --> 00:03:43,520
vivamente usar essa sintaxe.

46
00:03:43,520 --> 00:03:49,970
Se isso é novo para você agora você sabe disso e, em geral, você pode estar interessado

47
00:03:49,970 --> 00:03:57,890
em mergulhar em alguns como seis cursos ou materiais de aprendizagem, você simplesmente aprende sobre todos os recursos incríveis que sim

48
00:03:57,890 --> 00:04:00,140
6 tem para oferecer como este.

49
00:04:00,140 --> 00:04:01,800
Volte para a sintaxe.

50
00:04:01,970 --> 00:04:08,510
Nós efetivamente temos uma função aqui e, como eu disse na sua forma mais simples, um componente é uma função que

51
00:04:08,510 --> 00:04:10,020
retorna alguns J S x.

52
00:04:10,010 --> 00:04:11,010
Então vamos fazer isso.

53
00:04:11,240 --> 00:04:22,770
Vamos retornar alguns j como X e nós poderíamos simplesmente retornar um parágrafo aqui onde eu digo que eu sou uma pessoa agora.

54
00:04:22,790 --> 00:04:30,970
Isso só cria uma função válida que podemos usar como componente, mas também temos que fazer duas coisas.

55
00:04:30,980 --> 00:04:36,020
Você tem uma idéia do que temos que fazer.

56
00:04:36,090 --> 00:04:44,850
que esta sintaxe GSX é transformada para reagir e criar um elemento e poder chamar esse método.

57
00:04:44,940 --> 00:04:49,220
Para um, precisamos importar rejeitar porque tenha em mente

58
00:04:49,260 --> 00:04:55,500
Nós precisamos importar reagir com um capital são do pacote re-agir como este.

59
00:04:55,500 --> 00:05:03,800
Então, assim como fazemos em Abchurch Sim aqui, não precisamos de componente, porque aqui não estamos usando uma

60
00:05:03,800 --> 00:05:05,830
classe que estenda o componente.

61
00:05:05,960 --> 00:05:08,270
Em vez disso, estamos criando uma função.

62
00:05:08,720 --> 00:05:14,300
Ainda precisamos exportar essa função como padrão desse arquivo.

63
00:05:14,300 --> 00:05:21,890
de seguir para que este Daut aqui aparece e nós só vejamos a cruz e agora podemos começar

64
00:05:21,890 --> 00:05:29,360
a usar esse componente em outras facetas de nosso projeto, seja no único nosso componente nosso componente raiz.

65
00:05:29,450 --> 00:05:35,930
Aqui nós exportamos essa pessoa Constand que mantém esta função com aquilo que é seguro

66
00:05:35,930 --> 00:05:40,570
Nós ainda pensamos que a JS chegou lá.

67
00:05:40,580 --> 00:05:45,290
Vou adicionar uma importação e vou importar pessoa.

68
00:05:45,290 --> 00:05:50,420
Este nome é agora totalmente para você, mas deve ser o nome dos seus componentes, começando com

69
00:05:50,420 --> 00:05:51,370
um personagem principal.

70
00:05:52,630 --> 00:06:01,210
Do ponto de barras porque é uma recompensa relativa a pasta pessoa.

71
00:06:01,360 --> 00:06:08,320
Então, referindo-se a esta pasta que está no mesmo caminho que o laptop acaba de cair e lá a

72
00:06:08,380 --> 00:06:15,700
pessoa que js arquivo embora possamos omitir o ponto J ass porque é adicionado automaticamente pelo workflow de compilação.

73
00:06:15,700 --> 00:06:21,140
Agora, é importante que você o dê como um nome que começa com o personagem em maiúscula.

74
00:06:21,250 --> 00:06:26,320
Você pode usar qualquer outro nome que não precisa ser pessoa, embora faça

75
00:06:26,320 --> 00:06:34,000
sentido usar para nomear alguns componentes, mas deve ter caráter apretado porque em reagir em GSX todos os elementos que

76
00:06:34,000 --> 00:06:40,740
começam com caracteres minúsculos como div onde a idade 1 é reservada para os elementos nativos da HVM.

77
00:06:41,050 --> 00:06:47,710
Então, você poderia criar seu próprio componente, que você chamou de div com D em maiúscula e, em seguida, Riette

78
00:06:47,710 --> 00:06:53,800
poderia usar isso porque não interferiria com a definição normal e pelo mesmo motivo, você deveria dar a

79
00:06:53,800 --> 00:06:59,710
sua pessoa o caractere em letras maiúsculas para que o reagem o identifique como um componente personalizado.

80
00:07:00,040 --> 00:07:07,150
e encerramento como esta ou porque não aninhamos nada entre ou voltamos para o pai e as próximas palestras também.

81
00:07:07,150 --> 00:07:11,550
Então, vamos usar a pessoa aqui e podemos usar a marca de abertura

82
00:07:11,830 --> 00:07:19,730
Você também pode usar uma etiqueta de fechamento automático onde barra e, em seguida, maior que assinar o dnt com dívida se você

83
00:07:19,730 --> 00:07:20,740
salvar este outono.

84
00:07:20,740 --> 00:07:26,560
Q E você agora volta para o seu aplicativo com o NPM começando ainda em execução no terminal.

85
00:07:26,600 --> 00:07:32,700
Você vê que eu sou uma pessoa que está sendo processada abaixo do conteúdo do nosso componente da aplicação.

86
00:07:32,750 --> 00:07:35,210
Isso agora vem do nosso próprio componente.

87
00:07:35,300 --> 00:07:40,970
E se inspecionarmos, estamos vendo o fim, não vemos o nosso elemento personalizado, só vemos o parágrafo em

88
00:07:40,970 --> 00:07:45,130
que estamos exportando para a função e é na verdade como deveria ser.

89
00:07:45,620 --> 00:07:53,300
Então, este é o nosso único componente que se usa, é claro, usá-lo como este já é bom,

90
00:07:53,300 --> 00:08:01,270
mas o que exatamente é o benefício de tratá-lo assim em vez de simplesmente adicionar o código diretamente aos

91
00:08:01,280 --> 00:08:02,470
objetos apt caem.

92
00:08:02,510 --> 00:08:07,200
Vamos fazer mais com este componente para ver esse benefício na próxima palestra.
