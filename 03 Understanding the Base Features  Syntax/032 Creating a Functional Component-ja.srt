1
00:00:02,210 --> 00:00:08,480
&nbsp;

2
00:00:08,480 --> 00:00:14,930
&nbsp;

3
00:00:15,140 --> 00:00:21,890
&nbsp;

4
00:00:21,890 --> 00:00:24,410
私たちは皆、リアクションの基本的な基本について、特に正しく理解して理解するためには非常に重要なこの天才Xのことについてたくさんのことを実際に学びましたが、私は、リアクターのすべてのコンポーネントについて、これらのコンポーネントの構築を容易にするライブラリとして反応します。

5
00:00:24,590 --> 00:00:27,590
今は1つのコンポーネントしか使用していません。

6
00:00:27,620 --> 00:00:33,870
これを変更する時間ですが、私はこのプロジェクトのソースフォルダに新しいファイルを追加します。

7
00:00:33,890 --> 00:00:39,020
私は実際には新しいフォルダを追加して、それに資本Pで名前を付けます。

8
00:00:39,100 --> 00:00:41,220
これは、ある種の対決の反応です。

9
00:00:41,240 --> 00:00:48,620
&nbsp;

10
00:00:48,620 --> 00:00:54,380
&nbsp;

11
00:00:54,380 --> 00:01:01,490
&nbsp;

12
00:01:01,490 --> 00:01:04,120
あなたはそれをする必要はありませんが、コンポーネントを大文字の開始文字を作成するファイルに与え、このコンポーネントがスペースであることを記述します。そして、ここで、格納されているその人のフォルダ内の人に関する情報をレンダリングしたいソースフォルダーまたはjsファイルに保存されます。

13
00:01:04,220 --> 00:01:09,410
&nbsp;

14
00:01:09,410 --> 00:01:16,420
もう一度、資本の開始文字を持って、このコンポーネントが今どこにあるのかを記述するこのコンベンションに続いて、私はコンポーネントを作成したいと思います。すでにこれを行っています。

15
00:01:16,520 --> 00:01:23,750
実際には、re-actライブラリからコンポーネントクラスを拡張することで、思考JSファイルのボックスをそのまま使用できます。

16
00:01:23,750 --> 00:01:25,580
&nbsp;

17
00:01:25,670 --> 00:01:31,940
私たちはこのアプローチを絶対に使用することができ、後であなたが言うことができる実行時にコンポーネントを基本的に変更できる状態について学ぶと、後でもっと重要になります。

18
00:01:32,300 --> 00:01:37,800
&nbsp;

19
00:01:38,060 --> 00:01:43,850
しかし、ほとんどの場合、別の形式のコンポーネントを使用する必要があります。

20
00:01:43,850 --> 00:01:51,620
単純なjavascript関数よりも優れた機能を持つコンポーネントを作成するのは、最も単純な形式のコンポーネントはGSXをHVM以外のものを返す関数に過ぎないからです。

21
00:01:51,950 --> 00:01:58,480
&nbsp;

22
00:01:58,520 --> 00:02:03,040
もちろん、関数キーワードを使って関数を作成することもできます。

23
00:02:03,050 --> 00:02:08,290
あなたはここで大会の一種である小文字の開始文字でここに人を名付けることができます。

24
00:02:08,330 --> 00:02:13,970
あなたは首都を使用することができますし、ここでいくつかの天才Xを返すことができます。

25
00:02:13,970 --> 00:02:16,050
あなたは絶対にそうすることができます。

26
00:02:16,070 --> 00:02:22,550
最終的に同じ結果になる関数を保持する変数を作成するDiest構文を使用することもできます。

27
00:02:22,550 --> 00:02:24,570
&nbsp;

28
00:02:25,070 --> 00:02:29,450
しかし、私はこのコースで6つ使用して、強くお勧めします。

29
00:02:29,450 --> 00:02:32,700
Riakプロジェクトを扱う際は、ベストプラクティスのようなものです。

30
00:02:32,720 --> 00:02:36,080
それはあなたに多くの新しくて現代的な機能へのアクセスを与える。

31
00:02:36,170 --> 00:02:42,650
それゆえ、私は変数をwordキーワードではなくKonski単語で扱います。なぜなら、この変数を効果的に変えることは計画していないからです。

32
00:02:42,650 --> 00:02:45,950
&nbsp;

33
00:02:46,070 --> 00:02:48,410
したがって、我々はそのように市場化するべきです。

34
00:02:48,530 --> 00:02:51,430
私はそれを小文字の人物と名づけます。

35
00:02:51,730 --> 00:02:59,930
私が言ったように、大文字のPを持つ人を選ぶことができましたが、関数名がすべて小文字であることがよくあります。

36
00:02:59,930 --> 00:03:06,980
それ以外の場合は、ファイル名と同じ名前、または使用するAstiコンポーネント名にする必要があります。

37
00:03:07,100 --> 00:03:12,380
次に、この変数または定数に正確な値を割り当てます。

38
00:03:12,560 --> 00:03:14,330
そして、これは関数でなければなりません。

39
00:03:14,380 --> 00:03:18,880
今ここで再び関数を使うことができましたが、実際には私はyesに使いたいと思っています。

40
00:03:18,920 --> 00:03:20,580
6つの関数構文。

41
00:03:20,690 --> 00:03:29,810
この矢印関数の構文ので、私は等しい引数のリストの矢印関数の本体を言うでしょう。

42
00:03:29,810 --> 00:03:31,310
これはちょうど6です。

43
00:03:31,310 --> 00:03:35,090
functionキーワードで作成された関数と同じです。

44
00:03:35,090 --> 00:03:41,480
このキーワードには特に利点がありますが、この構文を使用することを強くお勧めします。

45
00:03:41,480 --> 00:03:43,520
&nbsp;

46
00:03:43,520 --> 00:03:49,970
&nbsp;

47
00:03:49,970 --> 00:03:57,890
&nbsp;

48
00:03:57,890 --> 00:04:00,140
これはあなたにとって新しいもので、今ではそれを知っています。一般に、6つのコースや学習教材としてのダイビングに興味があるかもしれません。

49
00:04:00,140 --> 00:04:01,800
しかし、構文に戻る。

50
00:04:01,970 --> 00:04:08,510
私たちは事実上ここで関数を持っています。そして、私はその最も単純な形式で、コンポーネントはいくつかのJ S

51
00:04:08,510 --> 00:04:10,020
xを返す関数であると言っています。

52
00:04:10,010 --> 00:04:11,010
そうしましょう。

53
00:04:11,240 --> 00:04:22,770
いくつかのjをXとして返しましょう。ここで段落を返すことができます。ここで私は今私は人です。

54
00:04:22,790 --> 00:04:30,970
これだけでは、コンポーネントとして使用できる有効な関数が作成されますが、2つのことも行う必要があります。

55
00:04:30,980 --> 00:04:36,020
私たちは何をしなければならないか考えていますか？

56
00:04:36,090 --> 00:04:44,850
create elementに変換され、このメソッドを呼び出せるようにするため、拒否をインポートする必要があります。

57
00:04:44,940 --> 00:04:49,220
このGSX構文がreact

58
00:04:49,260 --> 00:04:55,500
私たちは資本との反応をこのような再行動パッケージからインポートする必要があります。

59
00:04:55,500 --> 00:05:03,800
ここではAbchurchで行うのと同じです。ここでは、コンポーネントを拡張するクラスを使用していないため、ここでコンポーネントを作成する必要はありません。

60
00:05:03,800 --> 00:05:05,830
&nbsp;

61
00:05:05,960 --> 00:05:08,270
代わりに関数を作成しています。

62
00:05:08,720 --> 00:05:14,300
このファイルをデフォルトとしてエクスポートする必要があります。

63
00:05:14,300 --> 00:05:21,890
&nbsp;

64
00:05:21,890 --> 00:05:29,360
ここではこの関数を保持するConstandをエクスポートします。この関数は、このDautがここに表示され、十字が表示され、このコンポーネントをプロジェクトの他の側面、つまり私たちのコンポーネント私たちのルートコンポーネント。

65
00:05:29,450 --> 00:05:35,930
&nbsp;

66
00:05:35,930 --> 00:05:40,570
インドはまだJSがそこに落ちると考えています。

67
00:05:40,580 --> 00:05:45,290
私は輸入品を追加し、輸入する予定です。

68
00:05:45,290 --> 00:05:50,420
この名前は完全にあなた次第ですが、大文字で始まるコンポーネントの名前にする必要があります。

69
00:05:50,420 --> 00:05:51,370
&nbsp;

70
00:05:52,630 --> 00:06:01,210
それは相対的な報酬であるので、ドットスラッシュからpersonフォルダ。

71
00:06:01,360 --> 00:06:08,320
&nbsp;

72
00:06:08,380 --> 00:06:15,700
したがって、ラップトップと同じパスにあるdisフォルダを参照すると、jsファイルの人が落ちますが、ビルドワークフローによって自動的に追加されるため、ドットJの省略は省略できます。

73
00:06:15,700 --> 00:06:21,140
今大文字で始まる名前として与えることが重要です。

74
00:06:21,250 --> 00:06:26,320
&nbsp;

75
00:06:26,320 --> 00:06:34,000
&nbsp;

76
00:06:34,000 --> 00:06:40,740
GSXの反応では、divのような小文字で始まるすべての要素が年齢1が予約されているので、あなたはいくつかのコンポーネントに名前を付けるのに意味がありますが、人である必要はありません。ネイティブのHVM要素

77
00:06:41,050 --> 00:06:47,710
&nbsp;

78
00:06:47,710 --> 00:06:53,800
&nbsp;

79
00:06:53,800 --> 00:06:59,710
だから、あなたは大文字のDでdivという名前の独自のコンポーネントを作成することができます。そして、Rietteは通常のdefに干渉しないため、同じ理由で大文字を与える必要があります。カスタムコンポーネントとして。

80
00:07:00,040 --> 00:07:07,150
だから、ここで人を使ってみましょう。このような開始タグと終了タグのどちらかを使うことができます。間に何かを入れ子にしたり、次の講義に戻ったりすることはありません。

81
00:07:07,150 --> 00:07:11,550
&nbsp;

82
00:07:11,830 --> 00:07:19,730
もしあなたがこの秋を救うならば、自己閉鎖タグを使うこともできます。

83
00:07:19,730 --> 00:07:20,740
&nbsp;

84
00:07:20,740 --> 00:07:26,560
Qそして、端末でNPMをまだ起動している状態で、アプリケーションに戻ります。

85
00:07:26,600 --> 00:07:32,700
私は、私たちのアプリケーションコンポーネントのコンテンツの下でレンダリングされている人です。

86
00:07:32,750 --> 00:07:35,210
これは現在、私たち自身のコンポーネントから来ています。

87
00:07:35,300 --> 00:07:40,970
それを調べると、カスタム要素が表示されないという終わりが見えています。これは、エクスポートする段落が実際にどのように表示されるべきかを示しています。

88
00:07:40,970 --> 00:07:45,130
&nbsp;

89
00:07:45,620 --> 00:07:53,300
&nbsp;

90
00:07:53,300 --> 00:08:01,270
&nbsp;

91
00:08:01,280 --> 00:08:02,470
だからこれは現在、私たちの唯一のコンポーネントはもちろん、これを使って使用することはすでに素晴らしいですが、ちょうど適切なオブジェクトにコードを追加するのではなく、このように扱うことの利点は何ですか？

92
00:08:02,510 --> 00:08:07,200
次の講義でこの利点を確認するために、このコンポーネントをさらに使ってみましょう。
