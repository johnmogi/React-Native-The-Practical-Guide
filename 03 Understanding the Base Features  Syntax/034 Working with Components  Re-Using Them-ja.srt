1
00:00:02,170 --> 00:00:07,400
最後の講義では、独自のコンポーネントであるpersonコンポーネントを作成します。

2
00:00:07,400 --> 00:00:10,640
問題は、これが大きな利点です。

3
00:00:11,060 --> 00:00:19,020
各ファイルにコードを集中させることができ、メンテナンス性を向上させることができるため、コンポーネントは素晴らしいものです。

4
00:00:19,070 --> 00:00:26,690
チャプターのjsファイルにすべてを入れてはいけません。本当に大規模なアプリケーションで混雑してしまいます。このコンポーネントも再利用可能で設定可能です。

5
00:00:26,990 --> 00:00:30,110
&nbsp;

6
00:00:30,290 --> 00:00:34,460
それを再利用する部分を構成するカムバックは全く簡単です。

7
00:00:34,700 --> 00:00:38,510
私たちは、必要なだけ頻繁にコピーし貼り付けることができます。

8
00:00:38,510 --> 00:00:46,010
たぶん3回、このファイルを保存するだけで、出力を何度も得ることができます。これは、アプリケーションのどこでも簡単に再利用できます。

9
00:00:46,010 --> 00:00:50,510
&nbsp;

10
00:00:50,720 --> 00:00:57,160
私たちのアプリケーションにますます多くのコンポーネントが含まれている場合、これらのコンポーネントをすべて組み込み、使用する必要がある場所であればどこにでも簡単に使用できます。

11
00:00:57,160 --> 00:01:01,350
&nbsp;

12
00:01:01,400 --> 00:01:02,190
私たちの研究室で。

13
00:01:02,330 --> 00:01:06,190
これは事実、私たちのカスタムHVMオス要素です。

14
00:01:06,830 --> 00:01:12,230
私たちはそれを行う前にそれを設定することもできます。

15
00:01:12,380 --> 00:01:17,900
私たちの再行動コードについて他に何かを見せましょう。なぜなら、今は静的なままであるからです。

16
00:01:18,050 --> 00:01:23,730
私たちはカスタムコンポーネントを持っていますが、そこにはまだ静的なHDMIがあります。

17
00:01:23,750 --> 00:01:27,230
私は最後にいくつかのHMOの内容をテキストします。

18
00:01:27,230 --> 00:01:35,810
現在、あなたのGSXコードがダイナミックであるテンプレートは、アプリケーションの状態やユーザの入力によって異なるものを出力することがあります。

19
00:01:35,810 --> 00:01:39,250
&nbsp;

20
00:01:39,470 --> 00:01:45,490
今度はコースのためにこれをたくさん行いますが、次の講義ではそのための基礎を築きましょう。
