1
00:00:02,590 --> 00:00:08,460
だから、私がすべての変更を認識したスイッチ名h∥ndlerを呼びたいとしましょう。 H. だから、おそらく名前は完全に選ばれていないかもしれません。

2
00:00:08,460 --> 00:00:11,060
&nbsp;

3
00:00:11,350 --> 00:00:17,200
&nbsp;

4
00:00:17,770 --> 00:00:26,050
このボタンをクリックしたときだけでなく、このボタンをクリックしたときだけでなく、人のコンポーネントの中に名前と年齢が含まれていると言うことができる段落をクリックすると言うこともできます。

5
00:00:26,050 --> 00:00:28,860
&nbsp;

6
00:00:29,440 --> 00:00:37,840
これでpersonコンポーネント内でクリックで追加できるようになりましたが、今ではハンドラメソッドと呼ぶことができるのは別のクラスの別のファイルにあります。

7
00:00:37,840 --> 00:00:40,620
&nbsp;

8
00:00:40,900 --> 00:00:49,000
さて、実際には、このハンドラへの参照をコンポーネントのプロパティとして渡すことができます。これは素晴らしいハックではありません。

9
00:00:49,000 --> 00:00:50,140
これは実際には非常に一般的なパターンです。

10
00:00:50,290 --> 00:00:53,330
&nbsp;

11
00:00:53,810 --> 00:00:59,620
&nbsp;

12
00:00:59,620 --> 00:01:06,460
まず最初に、再構成されたすべてのコンポーネントは、これらのコンポーネントすべてに対して複数の行に渡っているので、どのプロパティを渡しているのかわかりやすくして、すべてのコンポーネントでこれを渡すことはしません。

13
00:01:06,550 --> 00:01:09,630
ここで私はPlekという名前の新しいプロパティを追加します。その名前は完全にあなた次第です。

14
00:01:10,030 --> 00:01:17,620
ここでは、このスイッチ名ハンドラへの参照を渡します。

15
00:01:18,460 --> 00:01:23,160
&nbsp;

16
00:01:23,410 --> 00:01:30,460
だから、基本的に私はここでこれを行ったのですが、このボタンをクリックした名前ハンドラは、このクリックプロパティへの参照として渡しています。

17
00:01:30,460 --> 00:01:34,740
そして今、私たちはこのクリックプロパティと人物Jを使うことができます。 S. clickはここで定義されているプロパティの名前なので、ここでは単にpropのクリックを呼び出すことができます。

18
00:01:35,020 --> 00:01:45,190
&nbsp;

19
00:01:45,190 --> 00:01:48,310
そして、これは私が参照として渡すこの関数を実行します。

20
00:01:48,610 --> 00:01:52,740
したがって、実際にすべてのファイルを人のチャットとして保存すれば、アプリケーションではこのボタンをクリックしてStephanieのMaximillian

21
00:01:52,780 --> 00:02:00,460
N-thの名前を変更できます。

22
00:02:00,460 --> 00:02:05,380
しかし、もし我々が再びリロードすると、ここでManueでこの段落をクリックすることができます。

23
00:02:05,590 --> 00:02:10,190
名前が変わったのを見ると、重要なパターンを理解するのに何か重要なことが起きます。

24
00:02:10,310 --> 00:02:19,120
メソッドを小道具としても渡すことができるので、状態に直接アクセスすることができず、状態に直接アクセスしてはならない別のコンポーネントで状態に変化する可能性のあるメソッドを呼び出すことができます。

25
00:02:19,320 --> 00:02:28,940
&nbsp;

26
00:02:29,160 --> 00:02:34,200
&nbsp;

27
00:02:34,200 --> 00:02:35,220
&nbsp;

28
00:02:35,220 --> 00:02:41,460
これは一般的なパターンであり、アプリコンポーネントの親コンポーネントのデータを変更できるクリックハンドラを渡すことができることを知っておくことが重要です。

29
00:02:41,460 --> 00:02:45,150
この場合、人のコンポーネントのために、多分私たちはすべて、私たちの関数に値を渡したくないのです。

30
00:02:45,150 --> 00:02:55,020
スイッチネームハンドラが新しい名前を受け取るようにして、Maximilienを新しい名前にハードコーディングした場所で、実際には新しい名前と同じ名前を設定するようにしてください。

31
00:02:55,020 --> 00:03:01,510
&nbsp;

32
00:03:01,530 --> 00:03:06,730
今、どのようにデータを渡しますか？

33
00:03:06,740 --> 00:03:10,390
これを行うには2つの方法があります。

34
00:03:10,390 --> 00:03:12,600
最初は、ここでbindと呼ぶことです。

35
00:03:12,610 --> 00:03:16,910
単純にこれをバインドすることができます。

36
00:03:16,960 --> 00:03:19,690
これは、関数内でこれが参照するものと今年にバインドするものを制御します。

37
00:03:19,780 --> 00:03:26,820
私たちがクラスにバインドしている関数の外は、奇妙に見えるかもしれませんが、javascriptでこの問題を処理する典型的な方法として、それを行う必要はありません。

38
00:03:26,850 --> 00:03:31,840
&nbsp;

39
00:03:31,850 --> 00:03:36,110
しかし、この構文を使用することもできます。なぜなら、第2引数をbindに渡したいからです。

40
00:03:36,430 --> 00:03:42,340
&nbsp;

41
00:03:42,610 --> 00:03:50,710
これは実際に関数に渡される引数のリストであり、ここでは新しい名前にする必要があります。

42
00:03:50,710 --> 00:03:51,610
だからこそ、これはマキシミリアンかもしれない。

43
00:03:51,790 --> 00:03:54,150
そして実際に違いを見る。

44
00:03:54,410 --> 00:03:56,270
&nbsp;

45
00:03:56,620 --> 00:04:02,290
そのバインドコードをコピーしてみましょう。これは、クリックProppへの参照として関数を渡したときにバインドされたすべてのバインドです。

46
00:04:02,290 --> 00:04:03,480
&nbsp;

47
00:04:03,970 --> 00:04:11,230
これを感嘆符付きのMaxに変更して、クリックした場所によって差異が見えるようにしましょう。

48
00:04:11,230 --> 00:04:13,090
ここでBINDを追加してこれを保存し、これを引数とスイッチネームハンドラとして受け取ったらスイッチ名をクリックしてMaximilienに変更するとどうなるか見てみましょう。それは引数を受け取って動作し、決してメニュー段落をクリックするとMaxに感嘆符付きの変更が表示されます。

49
00:04:13,380 --> 00:04:21,030
&nbsp;

50
00:04:21,040 --> 00:04:28,210
&nbsp;

51
00:04:28,210 --> 00:04:34,130
&nbsp;

52
00:04:34,130 --> 00:04:41,460
これは引数を渡す方法です。

53
00:04:41,480 --> 00:04:44,060
しかしそれだけではありません。

54
00:04:44,120 --> 00:04:45,990
ここでは2つのコードスニペットのうちの1つをBINDに残して、これがどのように動作するかを示します。

55
00:04:46,190 --> 00:04:51,990
また別の構文を示してください。

56
00:04:52,070 --> 00:04:54,580
だからあなたのどこに小道具の道を縛っておきなさい。

57
00:04:54,770 --> 00:04:57,840
しかし、私はこの新しい構文を使うことができます。私は今あなたを見せています。

58
00:04:58,010 --> 00:05:00,560
&nbsp;

59
00:05:00,570 --> 00:05:11,510
また、このニュースのインデックスは、ここではクリックで私は実際に引数を取る矢印の機能を実行する別のように見えます。

60
00:05:11,510 --> 00:05:13,650
理論的には、イベントオブジェクトを受け取るでしょう。

61
00:05:13,690 --> 00:05:16,070
ところで。

62
00:05:16,070 --> 00:05:16,980
しかし、私はここでそれを使用しません。

63
00:05:17,420 --> 00:05:18,980
そして、単に関数本体がこの関数呼び出しを返すとき。

64
00:05:19,550 --> 00:05:27,020
今ここで理解しなければならないことがいくつかあります。

65
00:05:27,020 --> 00:05:29,120
&nbsp;

66
00:05:29,120 --> 00:05:37,550
まず、矢印関数を使用するときには、矢印の直後にあるコードの前に暗黙的にreturnキーワードを追加します。

67
00:05:37,550 --> 00:05:39,890
すべてが1行で書かれているとします。

68
00:05:40,070 --> 00:05:42,230
代わりに、Raptorと中括弧を使用し、通常の関数本体を記述します。

69
00:05:42,230 --> 00:05:46,730
これは返され、私が返すものは関数呼び出しです。

70
00:05:47,210 --> 00:05:51,860
これが括弧を付け加えた理由です。

71
00:05:51,860 --> 00:05:54,140
&nbsp;

72
00:05:54,410 --> 00:06:01,700
今すぐ早期講義で私はあなたがこれを呼ぶべきではないと言いました、そしてそれは真実でしたが、ここでこれはすぐに実行されません。

73
00:06:01,700 --> 00:06:03,550
&nbsp;

74
00:06:03,560 --> 00:06:10,250
代わりに、ここで渡すものは無名関数です。無名関数はクリックで実行され、この関数の実行結果を返します。

75
00:06:10,250 --> 00:06:13,550
もちろん、どちらが機能不全に陥ってしまうのでしょうか？

76
00:06:13,550 --> 00:06:17,900
これは、ここではMaximillianのデータに2つの感嘆符を簡単に渡すことができるので便利です。

77
00:06:17,900 --> 00:06:26,270
たぶん今これを保存し、クリックスイッチ名を動作させることによって。

78
00:06:26,270 --> 00:06:31,760
Maximillianには2つの感嘆符が付いています。

79
00:06:31,760 --> 00:06:35,000
&nbsp;

80
00:06:35,000 --> 00:06:41,930
これは非常に便利な構文ですが、非効率的な再作用によって実際にアプリケーション内の特定のものが頻繁にレンダリングされる可能性があるため、代わりにバインド構文を使用する必要がない場合にはこれを使用することを必ずしも推奨しません。

81
00:06:41,930 --> 00:06:48,950
&nbsp;

82
00:06:48,950 --> 00:06:50,150
&nbsp;

83
00:06:50,180 --> 00:06:56,590
それをここに残すことができれば、それを使用することができます。また、アプリケーションのサイズにもよりますが、大きなパフォーマンスを感じるかもしれません。

84
00:06:56,660 --> 00:06:59,520
しかし、これは非効率的であることに注意してください。

85
00:06:59,780 --> 00:07:03,100
&nbsp;
